package InternalFrames;

import Conexion.SessionHelper;
import Dialogos.dlgSeguridadEmpleados;
import POJOs.Empleado;
import POJOs.Persona;
import POJOs.Usuario;
import Utilidad.Mensajes;
import Utilidad.UtilString;
import Utilidad.UtilTable;
import bean.EmpleadoBean;
import bean.PersonaBean;
import bean.UsuarioBean;
import java.awt.Color;
import java.awt.Component;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel-Zamora
 */
public class ifrRegistroEmpleados extends javax.swing.JInternalFrame {

    static UsuarioBean usuarioBean = new UsuarioBean();
    static EmpleadoBean empleadoBean = new EmpleadoBean();
    static PersonaBean personaBean = new PersonaBean();

//    Persona person;
    static List<Empleado> empleados;
    static DefaultTableModel modelEmpleados;
    public static boolean isActive = false;

    private static void ContarRegistros() {
        lblCantidadRegistros.setText("Cantidad de Registros: " + tableEmpleados.getRowCount());
    }

    public ifrRegistroEmpleados() {
        initComponents();

        tableEmpleados.setDefaultRenderer(Object.class, new TableRender());
        tableEmpleados.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            if (UtilTable.isAnyoneSelected(tableEmpleados)) {
                Empleado empleado = empleadoBean.FindById(UtilTable.getSelectedOnColumn(tableEmpleados, 0));
                MostrarInformacion(empleado);
            }
        });
        isActive = true;
        modelEmpleados = (DefaultTableModel) tableEmpleados.getModel();
        CargarTabla();

        SessionHelper.VerificarPermiso(pnlBusqueda, "gestion de empleados", "buscar");
        SessionHelper.VerificarPermiso(btnNuevo, "gestion de empleados", "insertar");
        SessionHelper.VerificarPermiso(btnEditar, "gestion de empleados", "modificar");
        SessionHelper.VerificarPermiso(btnExportar, "gestion de empleados", "exportar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        lblCantidadRegistros = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDetalles = new javax.swing.JEditorPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmpleados = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        pnlBusqueda = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        txtSearch = new javax.swing.JTextField();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));

        setClosable(true);
        setMaximizable(true);

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setDividerSize(0);
        jSplitPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSplitPane1.setMinimumSize(new java.awt.Dimension(0, 0));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(204, 109));

        jPanel4.setMinimumSize(new java.awt.Dimension(240, 240));
        jPanel4.setLayout(new java.awt.BorderLayout());

        lblCantidadRegistros.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblCantidadRegistros.setText("Cantidad de Registros: 0");
        jPanel12.add(lblCantidadRegistros);

        jPanel4.add(jPanel12, java.awt.BorderLayout.SOUTH);

        jPanel13.setLayout(new java.awt.BorderLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><strong>Información del Registro"));
        jPanel8.setMinimumSize(new java.awt.Dimension(700, 105));
        jPanel8.setPreferredSize(new java.awt.Dimension(700, 105));
        jPanel8.setLayout(new java.awt.BorderLayout());

        txtDetalles.setEditable(false);
        txtDetalles.setContentType("text/html"); // NOI18N
        jScrollPane2.setViewportView(txtDetalles);

        jPanel8.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel13, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(jPanel4);

        jPanel3.setMinimumSize(new java.awt.Dimension(588, 400));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 400));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("<html><Strong>REGISTROS DE EMPLEADOS");
        jPanel1.add(jLabel7);

        jPanel3.add(jPanel1, java.awt.BorderLayout.PAGE_START);
        jPanel3.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel9.setPreferredSize(new java.awt.Dimension(13, 300));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 404));

        tableEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.Registro", "Nombres", "Apellidos", "Correo", "Teléfono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEmpleados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableEmpleados.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableEmpleados);
        if (tableEmpleados.getColumnModel().getColumnCount() > 0) {
            tableEmpleados.getColumnModel().getColumn(0).setMinWidth(0);
            tableEmpleados.getColumnModel().getColumn(0).setPreferredWidth(0);
            tableEmpleados.getColumnModel().getColumn(0).setMaxWidth(0);
            tableEmpleados.getColumnModel().getColumn(4).setMinWidth(80);
            tableEmpleados.getColumnModel().getColumn(4).setPreferredWidth(90);
            tableEmpleados.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        jPanel9.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel7.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel10.setLayout(new java.awt.BorderLayout());

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel6.add(btnNuevo);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel6.add(btnEditar);

        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        jPanel6.add(btnExportar);

        jPanel10.add(jPanel6, java.awt.BorderLayout.SOUTH);

        pnlBusqueda.setLayout(new javax.swing.BoxLayout(pnlBusqueda, javax.swing.BoxLayout.LINE_AXIS));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Buscar:");
        pnlBusqueda.add(jLabel6);
        pnlBusqueda.add(filler1);

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        pnlBusqueda.add(txtSearch);
        pnlBusqueda.add(filler2);

        jPanel10.add(pnlBusqueda, java.awt.BorderLayout.NORTH);

        jPanel5.add(jPanel10, java.awt.BorderLayout.NORTH);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel3);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 1005, 523);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        SearchEmpleado();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        new dlgSeguridadEmpleados(JOptionPane.getFrameForComponent(this), true).setVisible(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        if (UtilTable.isAnyoneSelected(tableEmpleados)) {
            dlgSeguridadEmpleados dlgempleado = new dlgSeguridadEmpleados(JOptionPane.getFrameForComponent(this), true);
            dlgempleado.setEmpleado(empleadoBean.FindById(UtilTable.getSelectedOnColumn(tableEmpleados, 0)));
            dlgempleado.setVisible(true);
        } else {
            Mensajes.SeleccioneFila(this);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        UtilTable.Exportar(this, tableEmpleados);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private static javax.swing.JLabel lblCantidadRegistros;
    private javax.swing.JPanel pnlBusqueda;
    private static javax.swing.JTable tableEmpleados;
    private javax.swing.JEditorPane txtDetalles;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    public static void CargarTabla() {
        UtilTable.LimpiarTabla(tableEmpleados);
        empleados = empleadoBean.FindAll();
        Object[] fila = new Object[5];

        empleados.stream().forEach((emp) -> {
            Persona persona = personaBean.FindById(emp.getIdEmpleado());
            fila[0] = emp.getIdEmpleado();
            fila[1] = UtilString.union(new String[]{persona.getPrimerNombre(), persona.getSegundoNombre()});
            fila[2] = UtilString.union(new String[]{persona.getPrimerApellido(), persona.getSegundoApellido()});
            fila[3] = persona.getCorreo();
            fila[4] = persona.getTelefono();
            modelEmpleados.addRow(fila);
        });
        ContarRegistros();
    }

    public void SearchEmpleado() {
        UtilTable.LimpiarTabla(tableEmpleados);
        Object[] fila = new Object[5];
        String busqueda = txtSearch.getText();
        if (busqueda.isEmpty()) {
            CargarTabla();
        } else {
            empleados.stream().filter((emp) -> {
                Persona person = personaBean.FindById(emp.getIdEmpleado());
//                person = personaBean.FindById(emp.getIdEmpleado());
                return UtilString.contiene(emp.getCargo(), busqueda)
                        || UtilString.contiene(person.getPrimerNombre(), busqueda)
                        || UtilString.contiene(person.getSegundoNombre(), busqueda)
                        || UtilString.contiene(person.getPrimerApellido(), busqueda)
                        || UtilString.contiene(person.getSegundoApellido(), busqueda)
                        || UtilString.contiene(person.getTelefono(), busqueda)
                        || UtilString.contiene(person.getCedula(), busqueda)
                        || UtilString.contiene(person.getCorreo(), busqueda)
                        || UtilString.contiene(person.getDireccion(), busqueda);
            }).forEach((emp) -> {
                Persona persona = personaBean.FindById(emp.getIdEmpleado());
//                Persona persona = person;
                fila[0] = emp.getIdEmpleado();
                fila[1] = UtilString.union(new String[]{persona.getPrimerNombre(), persona.getSegundoNombre()});
                fila[2] = UtilString.union(new String[]{persona.getPrimerApellido(), persona.getSegundoApellido()});
                fila[3] = persona.getCorreo();
                fila[4] = persona.getTelefono();
                modelEmpleados.addRow(fila);
            });
            ContarRegistros();
        }
    }

    private void MostrarInformacion(Empleado emp) {
        Persona persona = personaBean.FindById(emp.getIdEmpleado());
        txtDetalles.setText("<br><strong>No. Regitro: " + emp.getIdEmpleado() + "</strong>"
                + "<br><br> Cédula: <strong>" + UtilString.EvitaVacio(persona.getCedula()) + "</strong>"
                + "<br> Dirección: <strong>" + String.valueOf(persona.getDireccion()) + "</strong>"
                + "<br> Cargo: <strong>" + emp.getCargo() + "</strong>"
                + "<br> Salario: <strong>" + String.valueOf(emp.getSalario()) + "</strong>"
                + "<br><br> Fecha de Creación: <strong>" + emp.getFechaCreacion() + "</strong>"
                + "<br> Usuario Creador: <strong>" + UtilString.EvitaVacio(emp.getUsuarioByUserCreacion() != null ? emp.getUsuarioByUserCreacion().getIdUsuario() : "") + "</strong>"
                + "<br><br> Ultima Modificación: <strong>" + emp.getFechaModificacion() + "</strong>"
                + "<br> Usuario que Modifico: <strong>" + UtilString.EvitaVacio(emp.getUsuarioByUserModificacion() != null ? emp.getUsuarioByUserModificacion().getIdUsuario() : "") + "</strong>"
                + "</strong>");
    }

    // TABLECELL RENDER PARA VERIFICAR SI EL USUARIO TIENE USUARIO REGISTRADO
    public class TableRender extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable tabla, Object value, boolean isSelected, boolean focus, int row, int column) {
            if (column == 0) {
                Usuario user = usuarioBean.FindByEmpleado(Integer.parseInt(String.valueOf(value)));
                if (user == null) {
                    setBackground(Color.decode("#d35400"));
                    setForeground(Color.white);
                } else {
                    setBackground(Color.decode("#F5FCFF"));
                    setForeground(Color.black);
                }
            }
            return super.getTableCellRendererComponent(tabla, value, isSelected, focus, row, column);
        }
    }
}
