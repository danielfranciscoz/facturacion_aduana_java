package InternalFrames;

import Conexion.SessionHelper;
import Dialogos.dlgClientes;
import Dialogos.dlgNotaDebito;
import POJOs.Cliente;
import Utilidad.Mensajes;
import Utilidad.UtilString;
import Utilidad.UtilTable;
import bean.ClienteBean;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel-Zamora
 */
public class ifrRegistroClientes extends javax.swing.JInternalFrame {

    static ClienteBean clientesBean;
    static List<Cliente> clientes;
    static List<Cliente> filas;

    public static boolean isActive = false;

    /**
     * Creates new form ifrRegistroClientes
     */
    public ifrRegistroClientes() {
        initComponents();
        isActive = true;
        jTable1.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            jTable1SelectionChanged(e);
        });

        SessionHelper.VerificarPermiso(btnNuevo, "gestion de clientes", "insertar");
        SessionHelper.VerificarPermiso(btnEditar, "gestion de clientes", "modificar");
        SessionHelper.VerificarPermiso(btnExportar, "gestion de clientes", "exportar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        lblCantidadRegistros = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDetalles = new javax.swing.JEditorPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnNuevaND = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField6 = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Clientes ");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setDividerSize(0);
        jSplitPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSplitPane1.setMinimumSize(new java.awt.Dimension(0, 0));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(204, 109));

        jPanel4.setMinimumSize(new java.awt.Dimension(240, 240));
        jPanel4.setLayout(new java.awt.BorderLayout());

        lblCantidadRegistros.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblCantidadRegistros.setText("Cantidad de Registros: 0");
        jPanel12.add(lblCantidadRegistros);

        jPanel4.add(jPanel12, java.awt.BorderLayout.SOUTH);

        jPanel13.setLayout(new java.awt.BorderLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><strong>Información del Registro"));
        jPanel8.setMinimumSize(new java.awt.Dimension(700, 105));
        jPanel8.setPreferredSize(new java.awt.Dimension(700, 105));
        jPanel8.setLayout(new java.awt.BorderLayout());

        txtDetalles.setEditable(false);
        txtDetalles.setContentType("text/html"); // NOI18N
        jScrollPane2.setViewportView(txtDetalles);

        jPanel8.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel13, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(jPanel4);

        jPanel3.setMinimumSize(new java.awt.Dimension(588, 400));
        jPanel3.setPreferredSize(new java.awt.Dimension(100, 400));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("<html><Strong>REGISTROS DE CLIENTES");
        jPanel1.add(jLabel7);

        jPanel3.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel9.setPreferredSize(new java.awt.Dimension(13, 300));
        jPanel9.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 404));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.Registro", "Razón Social", "RUC", "Teléfono", "Correo ", "Dirección"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(350);
        }

        jPanel9.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel7.add(jPanel9, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel10.setLayout(new java.awt.BorderLayout());

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel6.add(btnNuevo);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel6.add(btnEditar);

        btnNuevaND.setText("Crear Nota de Débito");
        btnNuevaND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaNDActionPerformed(evt);
            }
        });
        jPanel6.add(btnNuevaND);

        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });
        jPanel6.add(btnExportar);

        jPanel10.add(jPanel6, java.awt.BorderLayout.SOUTH);

        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel6.setText("Buscar Por:");
        jPanel11.add(jLabel6);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Razón Social", "RUC", "Dirección", "Correo" }));
        jPanel11.add(jComboBox1);

        jTextField6.setPreferredSize(new java.awt.Dimension(400, 26));
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6KeyReleased(evt);
            }
        });
        jPanel11.add(jTextField6);

        jPanel10.add(jPanel11, java.awt.BorderLayout.NORTH);

        jPanel5.add(jPanel10, java.awt.BorderLayout.NORTH);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel3);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(989, 501));
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseReleased

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        new dlgClientes(JOptionPane.getFrameForComponent(this), true).setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (UtilTable.isAnyoneSelected(jTable1)) {
            new dlgClientes(JOptionPane.getFrameForComponent(this), true, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString())).setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyReleased
        if (jComboBox1.getSelectedIndex() == 0) {
            try {
                Filtrar(jComboBox1.getSelectedItem().toString(), jTextField6.getText());
            } catch (NumberFormatException e) {
            }
        } else {
            Filtrar(jComboBox1.getSelectedItem().toString(), jTextField6.getText());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6KeyReleased

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        CargarTabla();
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        UtilTable.Exportar(this, jTable1);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportarActionPerformed

    private void btnNuevaNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaNDActionPerformed
        if (UtilTable.isAnyoneSelected(jTable1)) {
            try {
                new dlgNotaDebito(JOptionPane.getFrameForComponent(this),
                        false,
                        Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()),0,
                        jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString(),
                        true
                ).setVisible(true);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error Formateo Numerico", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, Mensajes.DEBE_SELECCIONAR_REGISTRO, "No se puede completar la acción", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNuevaNDActionPerformed

    private void jTable1SelectionChanged(ListSelectionEvent e) {
        if (UtilTable.isAnyoneSelected(jTable1)) {
            try {
                CargarDetalles(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error Formateo Numerico", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnNuevaND;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private static javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField6;
    private static javax.swing.JLabel lblCantidadRegistros;
    private javax.swing.JEditorPane txtDetalles;
    // End of variables declaration//GEN-END:variables

    private void IniciarStatus() {
        new Thread(() -> {
        }).start();
    }

    public static void CargarTabla() {
        /*Cargamos de la base de datos solo cuando Incia el Formulario o cuando se toca el boton Actualizar*/
        clientesBean = new ClienteBean();

        filas = new ArrayList<>();
        clientes = clientesBean.FindAll(true); // El true es para que cargue todos los productos excepto los anulados

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        UtilTable.LimpiarTabla(modelo);

        for (Cliente c : clientes) {
            CargarFila(modelo, c, true);
        }
        lblCantidadRegistros.setText("Cantidad de Registros: " + modelo.getRowCount());
    }

    /*El boolean TipoCargo es para saber si esta llenando la lista o si esta cargando a la tabla datos*/
    private static void CargarFila(DefaultTableModel modelo, Cliente c, boolean TipoCargo) {
        modelo.addRow(new Object[]{
            c.getIdCliente(),
            c.getRazonSocial(),
            c.getRuc(),
            c.getTelefono(),
            c.getCorreo(),
            c.getDireccion()
        });
        if (TipoCargo) {
            filas.add(c);
        }

    }

    private void CargarDetalles(int IdCliente) {
        for (Cliente c : filas) {
            if (c.getIdCliente() == IdCliente) {
                txtDetalles.setText("<br><strong>No. Regitro: " + c.getIdCliente()
                        + "</strong> <br><br> Fecha de Creación: <strong>" + c.getFechaCreacion()
                        + "</strong> <br>   Usuario Creador: <strong>" + c.getUsuarioByUserCreacion().getIdUsuario()
                        + "</strong> <br><br>   Ultima Modificación: <strong>" + c.getFechaModificacion()
                        + "</strong> <br>   Usuario que Modificó: <strong>" + UtilString.EvitaVacio(c.getUsuarioByUserModificacion().getIdUsuario())
                        + "</strong>"
                );
                break;
            }
        }
    }

    private void Filtrar(String Criterio, String Valor) throws NumberFormatException {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        UtilTable.LimpiarTabla(modelo);
        if (Valor.equals("")) {
            for (Cliente c : filas) {
                CargarFila(modelo, c, false);
            }

        } else {
            switch (Criterio) {
                case "Razón Social": {
                    for (Cliente c : filas) {
                        if (c.getRazonSocial().toLowerCase().contains(Valor.toLowerCase())) {
                            CargarFila(modelo, c, false);
                        }
                    }
                }
                break;

                case "RUC": {
                    for (Cliente c : filas) {
                        if (c.getRuc().startsWith(Valor)) {
                            CargarFila(modelo, c, false);
                        }
                    }
                }
                break;
                case "Dirección": {
                    for (Cliente c : filas) {
                        if (c.getDireccion().toLowerCase().contains(Valor.toLowerCase())) {
                            CargarFila(modelo, c, false);
                        }
                    }
                }
                break;
                case "Correo": {
                    for (Cliente c : filas) {
                        if (c.getCorreo().toLowerCase().contains(Valor.toLowerCase())) {
                            CargarFila(modelo, c, false);
                        }
                    }
                }
                break;
            }
        }
        lblCantidadRegistros.setText("Cantidad de Registros: " + modelo.getRowCount());
    }
}
