/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import Conexion.Dbcontext;
import Conexion.SessionHelper;
import InternalFrames.ifrRegistroFacturas;
import POJOs.Factura;
import POJOs.Notadebito;
import POJOs.Registrosanulados;
import Utilidad.Mensajes;
import bean.DetalleReciboBean;
import bean.FacturasBean;
import bean.NotaDebitoBean;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel-Zamora
 */
public class dlgAnular extends javax.swing.JDialog {

    Registrosanulados registrosAnulados;
    String Tabla;
    int IdRegistro;
    String Mensaje;
    DetalleReciboBean detalleReciboBean;

    /**
     * Creates new form dlgAnular
     *
     * @param parent
     * @param modal
     */
    public dlgAnular(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public dlgAnular(java.awt.Frame parent, boolean modal, String Tabla, int IdRegistro) {
        super(parent, modal);
        this.Tabla = Tabla;
        this.IdRegistro = IdRegistro;
        detalleReciboBean = new DetalleReciboBean();
        initComponents();
        lblTitulo.setText("<html><Strong>ANULANDO EL REGISTRO #" + IdRegistro + " - " + Tabla);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Anula registros");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTitulo.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("<html><Strong>ANULANDO EL REGISTRO #0000 - TIPO");
        jPanel1.add(lblTitulo);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><strong>Motivo por el cual anula el Registro"));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton1.setText("Anular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(395, 258));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTextArea1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el motivo por el cual Anula el Registro", "Informacion Incompleta", JOptionPane.WARNING_MESSAGE);
        } else {
            int DecisionFinal = JOptionPane.showConfirmDialog(this, Mensajes.CONFIRMA_ACTUALIZACION, "Mensaje de Confirmacion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (DecisionFinal == 0) {
                if (GuardarAnulacion()) {
                    Mensajes.OperacionExitosa(this);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(this, Mensaje, "Operacion Incompleta", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dlgAnular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dlgAnular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dlgAnular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgAnular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dlgAnular dialog = new dlgAnular(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables

    private boolean GuardarAnulacion() {

        boolean Guardo = false;
        registrosAnulados = new Registrosanulados();
        registrosAnulados.setIdRegistro(IdRegistro);
        registrosAnulados.setMotivo(jTextArea1.getText());
        registrosAnulados.setTabla(Tabla);
        registrosAnulados.setUsuario(SessionHelper.usuario);
        registrosAnulados.setFechaAnula(new Date());

        switch (Tabla) {
            case "Factura": {
                FacturasBean facturasBean = new FacturasBean();
                Factura factura = facturasBean.FindById(IdRegistro);
                if (detalleReciboBean.ObtenerCantidadFacturasAbonadas(factura.getCuentaRegistro()) > 0) {
                    Mensaje = "No se puede anular la factura porque hemos detectado que el cliente ya a realizado abonos a la deuda";
                    return false;
                }
                NotaDebitoBean notaDebitoBean = new NotaDebitoBean();
                List<Notadebito> notasDebito = notaDebitoBean.FindAll(factura.getCuentaRegistro());
                for (Notadebito notaDebito : notasDebito) {
                    if (notaDebito.getEstado().equals("Generada")) {
                        Guardo = false;
                        Mensaje = "No se puede Anular la factura porque aun tiene Notas de Débito en estado 'GENERADO' \n"
                                + "debe imprimir todas las notas de débito asociadas a la factura";
                        return false;
                    } else if (notaDebito.getEstado().equals("Impresa")) {
                        if (detalleReciboBean.ObtenerCantidadNotasDebitoAbonadas(notaDebito.getNotaDebito()) > 0) {
                            Mensaje = "No se puede anular la factura porque hemos detectado que el cliente ya a realizado abonos a la deuda de la Nota de Débito";
                            return false;
                        }
                        notaDebito.setEstado("Anulada");
                        try {
                            Registrosanulados ra = new Registrosanulados();
                            ra.setIdRegistro(notaDebito.getNotaDebito());
                            ra.setTabla("Nota de Débito");
                            ra.setMotivo("Se Anula la Nota de Debito por anulación de Cuenta de Registro #" + IdRegistro);
                            ra.setUsuario(SessionHelper.usuario);
                            ra.setFechaAnula(new Date());

                            Dbcontext.actualizar(notaDebito);
                            Dbcontext.guardar(ra);
                            System.out.println("Guardo el anulado");
                        } catch (Exception e) {
                            System.out.println("ENtra en el TRY");
                            Mensaje = e.getMessage();
                            return false;
                        }
                    }
                }
                factura.setEstado("Anulada");
                try {
                    Dbcontext.guardar(registrosAnulados);
                    Dbcontext.actualizar(factura);
                    Guardo = true;
                } catch (Exception e) {
                    Guardo = false;
                    Mensaje = e.getMessage();
                }
                if (ifrRegistroFacturas.RegistroFacturasActiva) {
                    ifrRegistroFacturas.CargarTabla();
                }
            }
            break;
            case "Nota de Débito": {
                NotaDebitoBean notaDebitoBean = new NotaDebitoBean();
                Notadebito notaDebito = notaDebitoBean.findById(IdRegistro);
                if (detalleReciboBean.ObtenerCantidadNotasDebitoAbonadas(notaDebito.getNotaDebito()) > 0) {
                    Mensaje = "No se puede anular la factura porque hemos detectado que el cliente ya a realizado abonos a la deuda de la Nota de Débito";
                    return false;
                }
                notaDebito.setEstado("Anulada");
                try {
                    Dbcontext.guardar(registrosAnulados);
                    Dbcontext.actualizar(notaDebito);
                    Guardo = true;
                } catch (Exception e) {
                    Guardo = false;
                    Mensaje = e.getMessage();
                }
                if (dlgNotaDebito.IsActive) {
                    dlgNotaDebito.CargarCombo();
                }
                if (ifrRegistroFacturas.RegistroFacturasActiva) {
                    ifrRegistroFacturas.CargarTabla();
                }
            }
            break;
        }

        return Guardo;
    }
}
