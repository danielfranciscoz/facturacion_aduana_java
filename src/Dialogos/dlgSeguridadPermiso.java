package Dialogos;

import Conexion.Dbcontext;
import Conexion.SessionHelper;
import InternalFrames.ifrResgistroRolesPermisos;
import POJOs.Pantalla;
import POJOs.Permiso;
import POJOs.PermisoId;
import POJOs.Rol;
import Utilidad.Mensajes;
import bean.PantallaBean;
import java.util.Date;
import java.util.List;

/**
 *
 * @author W4LT3R
 */
public class dlgSeguridadPermiso extends javax.swing.JDialog {

    PantallaBean pantallaBean = new PantallaBean();
    List<Pantalla> pantallas;
    Permiso permiso = new Permiso();
    Rol rol;

    public dlgSeguridadPermiso(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        pantallas = pantallaBean.FindAll();
    }

    public void setRol(Rol rol) {
        this.rol = rol;
        if (rol != null) {
            pantallas = pantallaBean.FindByRolNoPertenecen(rol.getIdRol());
        }
        LoadCbnPantallas();
    }

    public void setPermiso(Permiso permiso) {
        this.permiso = permiso;
        setTitle("Actualizar Registro");
        lblSubtitle.setText("<html><Strong>ACTUALIZAR PERMISO");
        cbnPantallas.removeAllItems();
        pantallas.stream().forEach((p) -> {
            if (permiso.getId().getIdPantalla() == p.getIdPantalla()) {
                cbnPantallas.addItem(p.getNombre());
                cbnPantallas.setSelectedItem(p.getNombre());
            }
        });
        cbnPantallas.setEnabled(false);
        chkInsertar.setSelected(permiso.getInsertar());
        chkModificar.setSelected(permiso.getModificar());
        chkEliminar.setSelected(permiso.getEliminar());
        chkBuscar.setSelected(permiso.getBuscar());
        chkExportar.setSelected(permiso.getExportar());
        chkImprimir.setSelected(permiso.getImprimir());
        chkAutorizar.setSelected(permiso.getAutorizar());
        chkDenegar.setSelected(permiso.getDenegar());
        btnAction.setText("Actualizar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblSubtitle = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbnPantallas = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        chkInsertar = new javax.swing.JCheckBox();
        chkBuscar = new javax.swing.JCheckBox();
        chkAutorizar = new javax.swing.JCheckBox();
        chkModificar = new javax.swing.JCheckBox();
        chkExportar = new javax.swing.JCheckBox();
        chkDenegar = new javax.swing.JCheckBox();
        chkEliminar = new javax.swing.JCheckBox();
        chkImprimir = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        btnAction = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nuevo Registro");
        setResizable(false);

        jPanel1.setLayout(new java.awt.BorderLayout());

        lblSubtitle.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblSubtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubtitle.setText("<html><Strong>INGRESAR PERMISO");
        jPanel3.add(lblSubtitle);

        jPanel1.add(jPanel3, java.awt.BorderLayout.NORTH);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><strong>Informaci√≥n del permiso"));

        jLabel1.setText("Seleccione Pantalla");

        jLabel2.setText("Seleccione los permisos de la pantalla");

        cbnPantallas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jPanel5.setLayout(new java.awt.GridLayout(3, 3));

        chkInsertar.setText("INSERTAR");
        jPanel5.add(chkInsertar);

        chkBuscar.setText("BUSCAR");
        jPanel5.add(chkBuscar);

        chkAutorizar.setText("AUTORIZAR");
        jPanel5.add(chkAutorizar);

        chkModificar.setText("MODIFICAR");
        jPanel5.add(chkModificar);

        chkExportar.setText("EXPORTAR");
        jPanel5.add(chkExportar);

        chkDenegar.setText("DENEGAR");
        jPanel5.add(chkDenegar);

        chkEliminar.setText("ELIMINAR");
        jPanel5.add(chkEliminar);

        chkImprimir.setText("IMPRIMIR");
        jPanel5.add(chkImprimir);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbnPantallas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbnPantallas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnAction.setText("Guardar");
        btnAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionActionPerformed(evt);
            }
        });
        jPanel2.add(btnAction);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancelar);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(374, 333));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionActionPerformed
        // TODO add your handling code here:
        RealizarAccion();
    }//GEN-LAST:event_btnActionActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAction;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<String> cbnPantallas;
    private javax.swing.JCheckBox chkAutorizar;
    private javax.swing.JCheckBox chkBuscar;
    private javax.swing.JCheckBox chkDenegar;
    private javax.swing.JCheckBox chkEliminar;
    private javax.swing.JCheckBox chkExportar;
    private javax.swing.JCheckBox chkImprimir;
    private javax.swing.JCheckBox chkInsertar;
    private javax.swing.JCheckBox chkModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblSubtitle;
    // End of variables declaration//GEN-END:variables

    private void LoadCbnPantallas() {
        cbnPantallas.removeAllItems();
        pantallas.stream().forEach((pan) -> {
            cbnPantallas.addItem(pan.getNombre());
        });
    }

    private void RealizarAccion() {
        permiso.setInsertar(chkInsertar.isSelected());
        permiso.setModificar(chkModificar.isSelected());
        permiso.setEliminar(chkEliminar.isSelected());
        permiso.setBuscar(chkBuscar.isSelected());
        permiso.setExportar(chkExportar.isSelected());
        permiso.setImprimir(chkImprimir.isSelected());
        permiso.setAutorizar(chkAutorizar.isSelected());
        permiso.setDenegar(chkDenegar.isSelected());
        permiso.setUsuarioByUserModificacion(SessionHelper.usuario);
        permiso.setFechaModificacion(new Date());
        String opc = btnAction.getText();
        try {
            switch (opc) {
                case "Guardar":
                    permiso.setId(new PermisoId(
                            rol.getIdRol(),
                            pantallas.get(cbnPantallas.getSelectedIndex()).getIdPantalla())
                    );
                    permiso.setUsuarioByUserCreacion(SessionHelper.usuario);
                    permiso.setFechaCreacion(new Date());
                    Dbcontext.guardar(permiso);
                    break;

                case "Actualizar":
                    Dbcontext.actualizar(permiso);
                    break;
            }
        } catch (Exception ex) {
            Mensajes.ErrorDesconocido(this, ex);
        }
        ifrResgistroRolesPermisos.LoadTablePermisos();
        Mensajes.OperacionExitosa(this);
        dispose();
    }
}
