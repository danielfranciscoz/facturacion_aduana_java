/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dialogos;

import POJOs.Cliente;
import POJOs.Detallenotadebito;
import POJOs.Factura;
import POJOs.Notadebito;
import Utilidad.Mensajes;
import Utilidad.UtilDate;
import Utilidad.UtilTable;
import bean.ClienteBean;
import bean.DetalleNotaDebitoBean;
import bean.FacturasBean;
import bean.NotaDebitoBean;
import java.util.Date;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel-Zamora
 */
public class dlgExportarNotasDebito extends javax.swing.JDialog {

    /*
    OpcionExporta
        =0  Exportar por Mes
        =1  Exportar por Rango de Fechas
        =2  Exportar Anual
        =3  Exportar Todo
     */
    NotaDebitoBean notaDebitoBean;
    int OpcionExporta = 0;

    /**
     * Creates new form dlgExportarNotasDebito
     */
    public dlgExportarNotasDebito(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        notaDebitoBean = new NotaDebitoBean();
        CargarCombos(notaDebitoBean);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        chkMes = new javax.swing.JCheckBox();
        cboMesesFiltro = new javax.swing.JComboBox<>();
        cboAnioFiltro = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        chkRangoFechas = new javax.swing.JCheckBox();
        jdcFechaInicio = new com.toedter.calendar.JDateChooser();
        jdcFechaFin = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        chkAnio = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        chkTodo = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Expotar Notas de Debito");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTitulo.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("<html><Strong>EXPORTAR NOTAS DE DÉBITO");
        jPanel1.add(lblTitulo);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("<html><strong>Registros a Exportar"));
        jPanel2.setLayout(new java.awt.GridLayout(4, 0));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        chkMes.setSelected(true);
        chkMes.setText("Registros por Mes");
        chkMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMesActionPerformed(evt);
            }
        });
        jPanel4.add(chkMes);

        cboMesesFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero" }));
        jPanel4.add(cboMesesFiltro);

        cboAnioFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2016" }));
        jPanel4.add(cboAnioFiltro);

        jPanel2.add(jPanel4);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        chkRangoFechas.setText("Registros por Rango de Fechas");
        chkRangoFechas.setToolTipText("<html>Para buscar por rangos de fecha debe tener en cuenta que se buscan coincidencias\n<strong>Mayores</strong> a la fecha inicial y <strong>Menores o Iguales</strong> a la Fecha Final");
        chkRangoFechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRangoFechasActionPerformed(evt);
            }
        });
        jPanel6.add(chkRangoFechas);

        jdcFechaInicio.setEnabled(false);
        jdcFechaInicio.setMaxSelectableDate(new Date());
        jPanel6.add(jdcFechaInicio);

        jdcFechaFin.setEnabled(false);
        jdcFechaFin.setMaxSelectableDate(new Date());
        jPanel6.add(jdcFechaFin);

        jPanel2.add(jPanel6);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        chkAnio.setText("Registros del Año");
        chkAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAnioActionPerformed(evt);
            }
        });
        jPanel5.add(chkAnio);

        jPanel2.add(jPanel5);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        chkTodo.setText("Todos los Registros");
        chkTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTodoActionPerformed(evt);
            }
        });
        jPanel7.add(chkTodo);

        jPanel2.add(jPanel7);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        setSize(new java.awt.Dimension(532, 252));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (OpcionExporta != -1) {
            UtilTable.Exportar(this, CrearTabla());
        } else {
            Mensajes.ErrorMessage(this, "No es posible exportar", "Debe mantener una opción seleccionada para poder exportar");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chkRangoFechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRangoFechasActionPerformed
        if (chkRangoFechas.isSelected()) {
            cboMesesFiltro.setEnabled(false);
            cboAnioFiltro.setEnabled(false);

            chkAnio.setSelected(false);
            chkMes.setSelected(false);
            chkTodo.setSelected(false);

            jdcFechaFin.setEnabled(true);
            jdcFechaInicio.setEnabled(true);
            OpcionExporta = 1;
        } else {
            OpcionExporta = -1;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_chkRangoFechasActionPerformed

    private void chkMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMesActionPerformed
        if (chkMes.isSelected()) {
            cboMesesFiltro.setEnabled(true);
            cboAnioFiltro.setEnabled(true);

            chkAnio.setSelected(false);
            chkRangoFechas.setSelected(false);
            chkTodo.setSelected(false);

            jdcFechaFin.setEnabled(false);
            jdcFechaInicio.setEnabled(false);
            OpcionExporta = 0;
        } else {
            OpcionExporta = -1;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_chkMesActionPerformed

    private void chkAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAnioActionPerformed
        if (chkAnio.isSelected()) {
            cboMesesFiltro.setEnabled(false);
            cboAnioFiltro.setEnabled(false);

            chkRangoFechas.setSelected(false);
            chkMes.setSelected(false);
            chkTodo.setSelected(false);

            jdcFechaFin.setEnabled(false);
            jdcFechaInicio.setEnabled(false);
            OpcionExporta = 2;
        } else {
            OpcionExporta = -1;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_chkAnioActionPerformed

    private void chkTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTodoActionPerformed
        if (chkTodo.isSelected()) {
            cboMesesFiltro.setEnabled(false);
            cboAnioFiltro.setEnabled(false);

            chkRangoFechas.setSelected(false);
            chkMes.setSelected(false);
            chkAnio.setSelected(false);

            jdcFechaFin.setEnabled(false);
            jdcFechaInicio.setEnabled(false);
            OpcionExporta = 3;
        } else {
            OpcionExporta = -1;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_chkTodoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dlgExportarNotasDebito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dlgExportarNotasDebito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dlgExportarNotasDebito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgExportarNotasDebito.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dlgExportarNotasDebito dialog = new dlgExportarNotasDebito(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JComboBox<String> cboAnioFiltro;
    private static javax.swing.JComboBox<String> cboMesesFiltro;
    private javax.swing.JCheckBox chkAnio;
    private javax.swing.JCheckBox chkMes;
    private static javax.swing.JCheckBox chkRangoFechas;
    private javax.swing.JCheckBox chkTodo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private com.toedter.calendar.JDateChooser jdcFechaFin;
    private com.toedter.calendar.JDateChooser jdcFechaInicio;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables

    private static void CargarCombos(NotaDebitoBean notaDebitoBean) {
        cboAnioFiltro.removeAllItems();
        cboMesesFiltro.removeAllItems();
        for (Integer entero : notaDebitoBean.ObtenerMesesAnios(true)) {
            cboMesesFiltro.addItem(UtilDate.MesFromInteger(entero));
        }
        for (Integer entero : notaDebitoBean.ObtenerMesesAnios(false)) {
            cboAnioFiltro.addItem(entero.toString());
        }

        cboMesesFiltro.setSelectedItem(UtilDate.MesActual());
    }

    private JTable CrearTabla() {
        JTable jtable1 = new JTable();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new Object[]{"FECHA DE CREACION", "CUENTA DE REGISTRO", "NUMERO DE DECLARACION", "CLIENTE", "NOTA DE DEBITO", "ESTADO", "DETALLE", "MONTO"});
        List<Notadebito> notas = notaDebitoBean.FindByTipo(OpcionExporta, UtilDate.IntegerFromMes(cboMesesFiltro.getSelectedItem().toString()), Integer.parseInt(cboAnioFiltro.getSelectedItem().toString()), jdcFechaInicio.getDate(), jdcFechaFin.getDate());

        DetalleNotaDebitoBean debitoBean = new DetalleNotaDebitoBean();
        FacturasBean facturasBean = new FacturasBean();
        ClienteBean clienteBean = new ClienteBean();

        Factura f;
        Cliente c;

        List<Detallenotadebito> listaDetalles;

        for (Notadebito notaDebito : notas) {
           
            if (notaDebito.getFactura() == null) {
                c = clienteBean.FindById(notaDebito.getCliente().getIdCliente());
                f = new Factura();
                f.setNumeroDeclaracion("");
                f.setCuentaRegistro(0);
            } else {
                f = facturasBean.FindById(notaDebito.getFactura().getCuentaRegistro());
                c = clienteBean.FindById(f.getCliente().getIdCliente());
            }

            listaDetalles = debitoBean.FindAll(notaDebito.getNotaDebito());

            for (Detallenotadebito listaDetalle : listaDetalles) {
                modelo.addRow(new Object[]{
                    notaDebito.getFechaCreacion(),
                    f.getCuentaRegistro(),
                    f.getNumeroDeclaracion(),
                    c.getRazonSocial(),
                    notaDebito.getNotaDebito(),
                    notaDebito.getEstado(),
                    listaDetalle.getDetalle(),
                    listaDetalle.getMonto()
                });
            }
        }
        jtable1.setModel(modelo);
        return jtable1;
    }

}
