package Dialogos;

import Conexion.Dbcontext;
import Conexion.SessionHelper;
import InternalFrames.ifrResgistroUsuarios;
import POJOs.Empleado;
import POJOs.Persona;
import POJOs.Rol;
import POJOs.Usuario;
import Utilidad.Cifrado;
import Utilidad.Mensajes;
import Utilidad.UtilString;
import bean.EmpleadoBean;
import bean.PersonaBean;
import bean.RolBean;
import bean.UsuarioBean;
import java.util.Date;
import java.util.List;

/**
 *
 * @author W4LT3R
 */
public class dlgSeguridadUsuario extends javax.swing.JDialog {

    UsuarioBean usuarioBean = new UsuarioBean();
    RolBean rolBean = new RolBean();
    EmpleadoBean empleadoBean = new EmpleadoBean();
    PersonaBean personaBean = new PersonaBean();
    Usuario usuario = new Usuario();
    List<Empleado> empleados = empleadoBean.FindAllSinUsuario();
    List<Rol> roles = rolBean.FindAll();

    public dlgSeguridadUsuario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        LoadComboBoxs();
    }

    public void setUsuario(Usuario usuario) {
        try {
            this.usuario = usuario;
            Persona persona = personaBean.FindById(usuario.getEmpleado().getIdEmpleado());
            cbnEmpleado.removeAllItems();
            cbnEmpleado.addItem(persona.getPrimerNombre() + " " + persona.getPrimerApellido());
            cbnEmpleado.setSelectedIndex(0);
            cbnEmpleado.setEnabled(false);

//            cbnCargo.setSelectedItem(rolBean.FindById(usuario.getgetIdRol()).getRol());
            cbnCargo.setSelectedItem(usuario.getRol().getRol());

            txtUsuario.setText(usuario.getIdUsuario());
            txtPass1.setText(Cifrado.decrypt(usuario.getPassword()));
            txtPass2.setText(Cifrado.decrypt(usuario.getPassword()));
            btnAction.setText("Actualizar");
        } catch (Exception ex) {
            Mensajes.ErrorDesconocido(this, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPass2 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        txtPass1 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbnEmpleado = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        cbnCargo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnAction = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nuevo Registro");
        setResizable(false);

        txtPass2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtPass2.setEchoChar('●');

        jLabel2.setText("Confirmar Contraseña");

        txtPass1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtPass1.setEchoChar('●');

        jLabel1.setText("Contraseña");

        jLabel3.setText("Empleado");

        cbnEmpleado.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jLabel4.setText("Usuario");

        txtUsuario.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        cbnCargo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jLabel5.setText("Rol");

        btnAction.setText("Guardar");
        btnAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbnEmpleado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbnCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPass2)
                    .addComponent(txtPass1)
                    .addComponent(txtUsuario)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(0, 174, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAction, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbnEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbnCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAction)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(328, 391));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionActionPerformed
        // TODO add your handling code here:
        try {
            RealizarAccion();
        } catch (Exception e) {
            Mensajes.ErrorDesconocido(this, e);
        }
    }//GEN-LAST:event_btnActionActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAction;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<String> cbnCargo;
    private javax.swing.JComboBox<String> cbnEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField txtPass1;
    private javax.swing.JPasswordField txtPass2;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    private void LoadComboBoxs() {
        if (empleados.size() < 1) {
            Mensajes.WarningMessage(this, "Nuevo Registro", "Invalido no se pueden crear usuarios sin empleados");
            dispose();
        }

        cbnEmpleado.removeAllItems();
        empleados.stream().forEach((empleado) -> {
            Persona persona = personaBean.FindById(empleado.getIdEmpleado());
            cbnEmpleado.addItem(persona.getPrimerNombre() + " " + persona.getPrimerApellido());
            cbnEmpleado.setSelectedIndex(0);
        });

        cbnCargo.removeAllItems();
        roles.stream().forEach((rol) -> {
            cbnCargo.addItem(rol.getRol());
            cbnCargo.setSelectedIndex(0);
        });
    }

    private void RealizarAccion() {
        if (!UtilString.isNullOrEmpty(txtUsuario.getText())
                && new String(txtPass1.getPassword()).equals(new String(txtPass2.getPassword()))) {
            usuario.setIdUsuario(txtUsuario.getText());
            usuario.setPassword(Cifrado.encrypt(new String(txtPass1.getPassword())));
            usuario.setFechaModificacion(new Date());
            usuario.setUsuarioByUserModificacion(SessionHelper.usuario);

            switch (btnAction.getText()) {
                case "Guardar":
                    usuario.setFechaCreacion(new Date());
                    usuario.setUsuarioByUserCreacion(SessionHelper.usuario);
                    usuario.setEmpleado(empleadoBean.FindById(empleados.get(cbnEmpleado.getSelectedIndex()).getIdEmpleado()));
                    usuario.setRol(rolBean.FindById(roles.get(cbnCargo.getSelectedIndex()).getIdRol()));
                    usuario.setRegAnulado(false);
                    Dbcontext.guardar(usuario);
                    break;

                case "Actualizar":
                    usuario.setRol(rolBean.FindById(roles.get(cbnCargo.getSelectedIndex()).getIdRol()));
                    Dbcontext.actualizar(usuario);
                    break;
            }
            ifrResgistroUsuarios.LoadUsuarios();
            Mensajes.OperacionExitosa(this);
            dispose();
        } else if (!new String(txtPass1.getPassword()).equals(new String(txtPass2.getPassword()))) {
            Mensajes.WarningMessage(this, "Creacion de usuario", "contraseñas no son iguales");
        } else {
            Mensajes.InformacionIncompleta(this);
        }
    }
}
